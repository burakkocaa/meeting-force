// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id            String    @id @default(cuid())
  email         String    @unique
  username      String    @unique
  password      String
  firstName     String
  lastName      String
  avatar        String?
  phoneNumber   String?
  isActive      Boolean   @default(true)
  emailVerified Boolean   @default(false)
  roleId        String
  createdAt     DateTime  @default(now())
  updatedAt     DateTime  @updatedAt
  lastLoginAt   DateTime?

  // İlişkiler
  role          Role      @relation(fields: [roleId], references: [id])
  meetings      Meet[]    @relation("MeetingOrganizer")

  @@map("users")
}

model Role {
  id          String   @id @default(cuid())
  name        String   @unique
  displayName String
  description String?
  permissions Json     // JSON formatında permissions
  isActive    Boolean  @default(true)
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt

  // İlişkiler
  users       User[]

  @@map("roles")
}

model MeetingRoom {
  id        String   @id @default(cuid())
  name      String
  location  String
  capacity  Int
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  meetings  Meet[]

  @@map("meeting_rooms")
}

model Meet {
  id          String   @id @default(cuid())
  title       String
  description String
  date        DateTime
  roomId      String
  organizerId String
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt

  // İlişkiler
  room        MeetingRoom @relation(fields: [roomId], references: [id])
  organizer   User        @relation("MeetingOrganizer", fields: [organizerId], references: [id])

  @@map("meets")
}
